// Place your key bindings in this file to override the default
[
    {
        "key": "j",
        "command": "vscode-neovim.compositeEscape1",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "key": "ctrl+j ctrl+j",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
    },
    {
        "key": "ctrl+l ctrl+l",
        "command": "workbench.action.terminal.focus",
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "ctrl+shift+;",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    // remove keys to support the above
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+'",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    // scrolling workarounds
    {
        "key": "ctrl+u",
        "command": "-vscode-neovim.ctrl-u",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
      },
      {
        "key": "ctrl+d",
        "command": "-vscode-neovim.ctrl-d",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
      },
      {
        "key": "ctrl+u",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "up",
                "by": "halfPage"
              }
            },
            {
              "command": "cursorMove",
              "args": { "to": "viewPortCenter" }
            }
          ]
        }
      },
      {
        "key": "ctrl+d",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "down",
                "by": "halfPage"
              }
            },
            {
              "command": "cursorMove",
              "args": { "to": "viewPortCenter" }
            }
          ]
        }
      },
    // Workaround for mapping n to nzz to center find results
    // https://github.com/vscode-neovim/vscode-neovim/issues/1222
    {
        "key": "n",
        "when": "editorTextFocus && neovim.mode == normal",
        "command": "runCommands",
        "args": {
            "commands": [
                // commands to run in sequence
                {
                    "command": "vscode-neovim.send",
                    "args": "n",
                },
                {
                    "command": "vscode-neovim.send",
                    "args": "zz",
                },
            ]
        }
    },    
]