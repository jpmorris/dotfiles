#!/usr/bin/env bash

lat=37.0
long=-76.9


print_usage() {
  printf "Usage: [-h] [-O <temp>] [-g <gamma>] [-b <brightness>]\n";
  exit 1;
}


# if previous values exist use those
if [ -f /tmp/monitor_temperature_previous ]; then
  temp=$(cat /tmp/monitor_temperature_previous | sed -r 's/(.*) (.*) (.*)/\1/')
  gamma=$(cat /tmp/monitor_temperature_previous | sed -r 's/(.*) (.*) (.*)/\2/')
  brightness=$(cat /tmp/monitor_temperature_previous | sed -r 's/(.*) (.*) (.*)/\3/')
fi

# if new values are specified replace previous with those
while getopts 'O:g:b:o:h' flag; do
  case "${flag}" in
    O) temp=${OPTARG} ;;
    g) gamma=${OPTARG} ;;
    b) brightness="${OPTARG}" ;;
    o) oldvals='true' ;;
    h) print_usage ;;
    *) print_usage ;;
  esac
done

# if nothing is entered exit
if [ -z "${temp}" ] && [ -z "${gamma}" ] && [ -z "${brightness}" ]; then
   print_usage
fi

# default values if others are entered and no old values found
if [ -z "${temp}" ]; then
  temp="6500K"
fi
if [ -z "${gamma}" ]; then
  temp="1"
fi
if [ -z "${brightness}" ]; then
  temp="1"
fi



# if old values requested (values before previous) then use those
if [ $oldvals ]; then
  temp=$(cat /tmp/monitor_temperature_old | sed -r 's/(.*) (.*) (.*)/\1/')
  gamma=$(cat /tmp/monitor_temperature_old | sed -r 's/(.*) (.*) (.*)/\2/')
  brightness=$(cat /tmp/monitor_temperature_old | sed -r 's/(.*) (.*) (.*)/\3/')
fi

cp /tmp/monitor_temperature_previous /tmp/monitor_temperature_old
echo "$temp $gamma $brightness" > /tmp/monitor_temperature_previous
redshift -P -l $lat:$long -m randr -O $temp -g $gamma -b $brightness

